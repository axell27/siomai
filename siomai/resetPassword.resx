<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>